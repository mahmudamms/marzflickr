{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\iym_mobile\\\\SC\\\\iym_mobile\\\\screens\\\\MV\\\\MVCategory.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport * as Notifications from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\nimport Constants from 'expo-constants';\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: false,\n              shouldSetBadge: false\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Block, Input, theme } from \"galio-framework\";\nimport { GradientHeader, DetailMVList, Button, Filter, Icon, LoadMore, Text } from \"../../components\";\nimport { nowTheme, detail_mrir, config } from \"../../constants\";\nimport category from \"../../constants/MV/category_mv\";\nimport { LinearGradient } from 'expo-linear-gradient';\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar iconColor = '#6FBE6F';\nvar gradientColor = ['#0BAB64', '#83D475'];\n\nvar DismissKeyboard = function DismissKeyboard(_ref) {\n  var children = _ref.children;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nimport * as Animatable from 'react-native-animatable';\n\nvar Detail = function (_React$Component) {\n  _inherits(Detail, _React$Component);\n\n  var _super = _createSuper(Detail);\n\n  function Detail() {\n    var _this2;\n\n    _classCallCheck(this, Detail);\n\n    _this2 = _super.call(this);\n\n    _this2.handleViewRef = function (ref) {\n      return _this2.view = ref;\n    };\n\n    _this2.fadeInUp = function () {\n      return _this2.view.fadeInUp(800).then(function (endState) {\n        return console.log(endState.finished ? 'bounce finished' : 'bounce cancelled');\n      });\n    };\n\n    _this2._isMounted = false;\n\n    _this2.renderContent = function () {\n      return React.createElement(Block, {\n        center: true,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, React.createElement(FlatList, {\n        data: category,\n        keyExtractor: function keyExtractor(category, index) {\n          return index.toString();\n        },\n        renderItem: function renderItem(category) {\n          return _this2.renderItem(category);\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }), _this2.renderButton());\n    };\n\n    _this2.renderItem = function (_ref2) {\n      var item = _ref2.item;\n      var link = item.action;\n      return React.createElement(Animatable.View, {\n        ref: _this2.handleViewRef,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(link, {\n            title: item.title + ' - ' + item.fullname,\n            menu: item.menu\n          });\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingTop: 20\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, React.createElement(Block, {\n        center: true,\n        style: {\n          borderRadius: 8,\n          paddingVertical: 20,\n          backgroundColor: nowTheme.COLORS.WHITE,\n          width: width / 1.1,\n          height: height * 0.17\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, React.createElement(Block, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }\n      }, React.createElement(Icon, {\n        size: 50,\n        color: iconColor,\n        name: item.icon,\n        family: item.family,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      })), React.createElement(Block, {\n        style: {\n          paddingTop: 5,\n          justifyContent: 'center',\n          alignItems: 'center',\n          flex: 1\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: 'montserrat-bold',\n          textAlign: 'center'\n        },\n        size: 17,\n        color: nowTheme.COLORS.GRAY,\n        title: item.title,\n        bold: true,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }))))));\n    };\n\n    _this2.renderButton = function () {\n      return React.createElement(Block, {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: _this2.bounce,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }\n      }, React.createElement(Animatable.View, {\n        ref: _this2.handleViewRef,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        size: 17,\n        color: nowTheme.COLORS.GRAY,\n        title: '',\n        bold: true,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }\n      }))));\n    };\n\n    _this2.registerForPushNotificationsAsync = function _callee() {\n      var token, _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!Constants.isDevice) {\n                _context2.next = 21;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n            case 3:\n              _await$Permissions$ge = _context2.sent;\n              existingStatus = _await$Permissions$ge.status;\n              finalStatus = existingStatus;\n\n              if (!(existingStatus !== 'granted')) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n            case 9:\n              _await$Permissions$as = _context2.sent;\n              status = _await$Permissions$as.status;\n              finalStatus = status;\n\n            case 12:\n              if (!(finalStatus !== 'granted')) {\n                _context2.next = 15;\n                break;\n              }\n\n              alert('Failed to get push token for push notification!');\n              return _context2.abrupt(\"return\");\n\n            case 15:\n              _context2.next = 17;\n              return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n            case 17:\n              token = _context2.sent.data;\n\n              _this2.setState({\n                expoPushToken: token\n              });\n\n              _context2.next = 22;\n              break;\n\n            case 21:\n              alert('Must use physical device for Push Notifications');\n\n            case 22:\n              if (Platform.OS === 'android') {\n                Notifications.setNotificationChannelAsync('default', {\n                  name: 'default',\n                  importance: Notifications.AndroidImportance.MAX,\n                  vibrationPattern: [0, 250, 250, 250],\n                  lightColor: '#FF231F7C'\n                });\n              }\n\n            case 23:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this2.state = {\n      listData: [],\n      isLoading: true,\n      isLoadData: false,\n      loadButton: false,\n      data_user: [],\n      filter: '',\n      title: '',\n      expoPushToken: '',\n      notification: {}\n    };\n    return _this2;\n  }\n\n  _createClass(Detail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data_user;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this._isMounted = true;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('data_user'));\n\n            case 3:\n              data_user = _context3.sent;\n              data_user = JSON.parse(data_user);\n              this.setState({\n                data_user: data_user,\n                title: this.props.route.params.title\n              });\n              return _context3.abrupt(\"return\", function () {\n                isMounted = false;\n              });\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DismissKeyboard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, this.renderContent()));\n    }\n  }, {\n    key: \"sendPushNotification\",\n    value: function sendPushNotification() {\n      return _regeneratorRuntime.async(function sendPushNotification$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(Notifications.scheduleNotificationAsync({\n                content: {\n                  title: \"PCMS Mobile\",\n                  body: 'Testing Notification IT Dev Team',\n                  data: {\n                    data: 'goes here'\n                  }\n                },\n                trigger: {\n                  seconds: 1\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Detail;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  home: {\n    width: width\n  },\n  articles: {\n    width: width - theme.SIZES.BASE * 2,\n    paddingVertical: theme.SIZES.BASE,\n    paddingHorizontal: 2,\n    fontFamily: 'montserrat-regular'\n  }\n});\nexport default Detail;","map":{"version":3,"sources":["C:/xampp/htdocs/iym_mobile/SC/iym_mobile/screens/MV/MVCategory.js"],"names":["React","Notifications","Permissions","Constants","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","AsyncStorage","Block","Input","theme","GradientHeader","DetailMVList","Button","Filter","Icon","LoadMore","Text","nowTheme","detail_mrir","config","category","LinearGradient","Dimensions","get","height","width","iconColor","gradientColor","DismissKeyboard","children","Keyboard","dismiss","Animatable","Detail","handleViewRef","ref","view","fadeInUp","then","endState","console","log","finished","_isMounted","renderContent","index","toString","renderItem","renderButton","item","link","action","props","navigation","navigate","title","fullname","menu","paddingTop","borderRadius","paddingVertical","backgroundColor","COLORS","WHITE","icon","family","justifyContent","alignItems","flex","fontFamily","textAlign","GRAY","bounce","registerForPushNotificationsAsync","isDevice","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","askAsync","alert","getExpoPushTokenAsync","token","data","setState","expoPushToken","Platform","OS","setNotificationChannelAsync","name","importance","AndroidImportance","MAX","vibrationPattern","lightColor","state","listData","isLoading","isLoadData","loadButton","data_user","filter","notification","getItem","JSON","parse","route","params","isMounted","scheduleNotificationAsync","content","body","trigger","seconds","Component","styles","StyleSheet","create","home","articles","SIZES","BASE","paddingHorizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport * as Notifications from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\nimport Constants from 'expo-constants';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n});\n\n\nimport { \n    ActivityIndicator,\n    AsyncStorage,\n    Dimensions,\n    FlatList,\n    StyleSheet, \n    ScrollView,\n    Keyboard,\n    TouchableWithoutFeedback,\n    View,\n    Platform\n} from \"react-native\";\n\nimport { \n    Block, \n    Input, \n    theme, \n} from \"galio-framework\";\n\nimport { \n    GradientHeader, \n    DetailMVList, \n    Button, \n    Filter, \n    Icon, \n    LoadMore,\n    Text, \n} from \"../../components\";\n\nimport { nowTheme, detail_mrir, config } from \"../../constants\";\n\nimport category from \"../../constants/MV/category_mv\";\n\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst { height, width } = Dimensions.get(\"screen\");\n\nvar iconColor = '#6FBE6F';\nvar gradientColor = ['#0BAB64', '#83D475'];\n\nconst DismissKeyboard = ({ children }) => (\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>{children}</TouchableWithoutFeedback>\n);\n\nimport * as Animatable from 'react-native-animatable';\n\nclass Detail extends React.Component {\n\n  handleViewRef = ref => this.view = ref;\n  fadeInUp = () => this.view.fadeInUp(800).then(endState => console.log(endState.finished ? 'bounce finished' : 'bounce cancelled'));\n\n    _isMounted = false;\n\n    constructor() {\n        super();\n\n        this.state = {\n          listData: [],\n          isLoading: true,\n          isLoadData: false,\n          loadButton: false,\n          data_user: [],\n          filter: '',\n          title: '',\n\n          expoPushToken: '',\n          notification: {},\n        };\n    }\n\n    async componentDidMount() {\n      this._isMounted = true;\n\n      var data_user = await AsyncStorage.getItem('data_user');\n      var data_user = JSON.parse(data_user);\n\n      this.setState({\n          data_user: data_user,\n          title: this.props.route.params.title,\n      });\n\n      return () => { isMounted = false };\n    }\n\n    componentWillUnmount() {\n      this._isMounted = false;\n    }\n\n    render() {\n      return (\n        <DismissKeyboard>\n          <Block>\n            { this.renderContent() }\n          </Block>\n        </DismissKeyboard>\n      );\n    }\n\n    renderContent = () => {\n        return(\n            <Block center>\n                <FlatList\n                    data={category}\n                    keyExtractor={(category, index) => index.toString()}\n                    renderItem={(category) => {\n                        return(\n                            this.renderItem(category)\n                        )\n                    }}\n                />\n\n                { this.renderButton() }\n                \n            </Block>\n\n        )\n    }\n\n    renderItem = ({item}) => {\n\n        var link = item.action;\n    \n        return(\n          <Animatable.View ref={this.handleViewRef}>\n            <TouchableWithoutFeedback\n              onPress={() => this.props.navigation.navigate(link, {\n                title: item.title + ' - ' + item.fullname,\n                menu: item.menu,\n              })}\n            >\n              <Block style={{ paddingTop: 20}}>\n                <Block \n                  center\n                  style={{ \n                    borderRadius: 8,\n                    paddingVertical: 20,\n                    backgroundColor: nowTheme.COLORS.WHITE,\n                    width: width / 1.1,\n                    height: height * 0.17,\n                  }}\n                >\n                  <Block>\n                    <Icon\n                      size={50}\n                      color={iconColor}\n                      name={item.icon}\n                      family={item.family}\n                    />\n                  </Block>\n      \n                  <Block style={{paddingTop: 5, justifyContent: 'center', alignItems: 'center', flex: 1}}>\n                    <Text\n                      style={{ fontFamily: 'montserrat-bold', textAlign: 'center' }}\n                      size={17}\n                      color={nowTheme.COLORS.GRAY}\n                      title={item.title}\n                      bold={true}\n                    />\n                  </Block>\n                </Block>\n              </Block>\n            </TouchableWithoutFeedback>\n          </Animatable.View>\n        )\n    }\n\n    renderButton = () => {\n      return(\n        <Block>\n          {/* <Button onPress={() => this.sendPushNotification() }>\n            <Text\n              style={{ fontFamily: 'montserrat-bold', textAlign: 'center' }}\n              size={17}\n              color={nowTheme.COLORS.WHITE}\n              title={'send'}\n              bold\n            />\n          </Button> */}\n\n          <TouchableWithoutFeedback onPress={this.bounce}>\n            <Animatable.View ref={this.handleViewRef}>\n              <Text\n                size={17}\n                color={nowTheme.COLORS.GRAY}\n                title={''}\n                bold\n              />\n            </Animatable.View>\n          </TouchableWithoutFeedback>\n\n        </Block>\n      )\n    }\n\n    async sendPushNotification() {\n\n      await Notifications.scheduleNotificationAsync({\n        content: {\n          title: \"PCMS Mobile\",\n          body: 'Testing Notification IT Dev Team',\n          data: { data: 'goes here' },\n        },\n        trigger: { seconds: 1 },\n      });\n\n    }\n\n    registerForPushNotificationsAsync = async () => {\n      let token;\n    \n      if (Constants.isDevice) {\n        const { status: existingStatus } = await Permissions.getAsync(Permissions.NOTIFICATIONS);\n        let finalStatus = existingStatus;\n\n        if (existingStatus !== 'granted') {\n          const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n          finalStatus = status;\n        }\n\n        if (finalStatus !== 'granted') {\n          alert('Failed to get push token for push notification!');\n          return;\n        }\n        token = (await Notifications.getExpoPushTokenAsync()).data;\n    \n        this.setState({expoPushToken:token})\n\n      } else {\n        alert('Must use physical device for Push Notifications');\n      }\n\n      if (Platform.OS === 'android') {\n        Notifications.setNotificationChannelAsync('default', {\n          name: 'default',\n          importance: Notifications.AndroidImportance.MAX,\n          vibrationPattern: [0, 250, 250, 250],\n          lightColor: '#FF231F7C',\n        });\n      }\n    }\n\n}\n\nconst styles = StyleSheet.create({\n  home: {\n    width: width\n  },\n  articles: {\n    width: width - theme.SIZES.BASE * 2,\n    paddingVertical: theme.SIZES.BASE,\n    paddingHorizontal: 2,\n    fontFamily: 'montserrat-regular'\n\n  }\n});\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}