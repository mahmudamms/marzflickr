{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\iym_mobile\\\\SC\\\\iym_mobile\\\\components\\\\Select.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport { Block, Input, Text } from \"galio-framework\";\nimport Icon from \"./Icon\";\nimport { nowTheme } from \"../constants\";\nimport { TouchableOpacity, TouchableWithoutFeedback } from \"react-native-gesture-handler\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar iconColor = '#6FBE6F';\n\nvar Dropdown = function (_React$Component) {\n  _inherits(Dropdown, _React$Component);\n\n  var _super = _createSuper(Dropdown);\n\n  function Dropdown() {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _super.call(this);\n\n    _this.renderOption = function (item, index) {\n      return React.createElement(Block, {\n        key: index,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return _this.selectChanged(item);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingBottom: 5\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, React.createElement(Block, {\n        card: true,\n        style: {\n          borderWidth: 1,\n          borderColor: nowTheme.COLORS.GRAY\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingVertical: 10\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, React.createElement(Block, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, React.createElement(Block, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingHorizontal: 16\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: 'montserrat-bold'\n        },\n        size: 14,\n        color: nowTheme.COLORS.GRAY,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }\n      }, item + ' ' + _this.state.symbol)))))))));\n    };\n\n    _this.selectChanged = function (item) {\n      _this.setState({\n        isShow: !_this.state.isShow,\n        selected: item,\n        isChanged: true\n      });\n\n      _this.props.selectChanged(item);\n\n      _this.setState({\n        isChanged: false\n      });\n    };\n\n    _this.selectPressed = function (status) {\n      _this.setState({\n        isShow: status\n      });\n    };\n\n    _this.state = {\n      isShow: false,\n      isChanged: false,\n      selected: '',\n      valueDropdown: [],\n      symbol: ''\n    };\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.setState({\n                selected: this.props.selected,\n                valueDropdown: this.props.value,\n                symbol: this.props.symbol\n              });\n              console.log(this.state.selected);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          shadowless = _this$props.shadowless,\n          success = _this$props.success,\n          error = _this$props.error,\n          primary = _this$props.primary,\n          symbol = _this$props.symbol;\n      var inputStyles = [styles.input, !shadowless, success && styles.success, error && styles.error, primary && styles.primary, _objectSpread({}, this.props.style)];\n      return React.createElement(Block, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return _this2.selectPressed(!_this2.state.isShow);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingBottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, React.createElement(Block, {\n        card: true,\n        style: {\n          borderWidth: 1,\n          borderColor: nowTheme.COLORS.GRAY\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingVertical: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, React.createElement(Block, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, React.createElement(Block, {\n        style: {\n          width: '85%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingHorizontal: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, this.state.isChanged == false ? React.createElement(Text, {\n        style: {\n          fontFamily: 'montserrat-bold'\n        },\n        size: 14,\n        color: nowTheme.COLORS.GRAY,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, this.state.selected + ' ' + symbol) : React.createElement(Block, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 27\n        }\n      }))), React.createElement(Block, {\n        style: {\n          width: '15%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, React.createElement(Block, {\n        center: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        size: 15,\n        color: nowTheme.COLORS.SECONDARY,\n        name: this.state.isShow == true ? \"chevron-up\" : \"chevron-down\",\n        family: \"Feather\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 23\n        }\n      })))))))), this.state.isShow == true ? React.createElement(Block, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      }, this.state.valueDropdown.map(function (item, index) {\n        return _this2.renderOption(item, index);\n      })) : React.createElement(Block, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Dropdown;\n}(React.Component);\n\nDropdown.defaultProps = {\n  shadowless: false,\n  success: false,\n  error: false,\n  primary: false\n};\nDropdown.propTypes = {\n  shadowless: PropTypes.bool,\n  success: PropTypes.bool,\n  error: PropTypes.bool,\n  primary: PropTypes.bool\n};\nvar styles = StyleSheet.create({\n  input: {\n    borderRadius: 30,\n    borderColor: nowTheme.COLORS.BORDER,\n    height: 44,\n    backgroundColor: '#FFFFFF'\n  },\n  success: {\n    borderColor: nowTheme.COLORS.INPUT_SUCCESS\n  },\n  error: {\n    borderColor: nowTheme.COLORS.INPUT_ERROR\n  },\n  primary: {\n    borderColor: nowTheme.COLORS.PRIMARY\n  },\n  shadow: {\n    shadowColor: nowTheme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 0.5\n    },\n    shadowRadius: 1,\n    shadowOpacity: 0.13,\n    elevation: 2\n  }\n});\nexport default Dropdown;","map":{"version":3,"sources":["C:/xampp/htdocs/iym_mobile/SC/iym_mobile/components/Select.js"],"names":["React","PropTypes","Block","Input","Text","Icon","nowTheme","TouchableOpacity","TouchableWithoutFeedback","Dimensions","get","height","width","iconColor","Dropdown","renderOption","item","index","selectChanged","paddingBottom","borderWidth","borderColor","COLORS","GRAY","paddingVertical","paddingHorizontal","fontFamily","state","symbol","setState","isShow","selected","isChanged","props","selectPressed","status","valueDropdown","value","console","log","shadowless","success","error","primary","inputStyles","styles","input","style","SECONDARY","map","Component","defaultProps","propTypes","bool","StyleSheet","create","borderRadius","BORDER","backgroundColor","INPUT_SUCCESS","INPUT_ERROR","PRIMARY","shadow","shadowColor","BLACK","shadowOffset","shadowRadius","shadowOpacity","elevation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Dimensions, StyleSheet } from \"react-native\";\nimport PropTypes from 'prop-types';\n\nimport { Block, Input, Text } from \"galio-framework\";\n\nimport Icon from './Icon';\nimport { nowTheme } from \"../constants\";\nimport { TouchableOpacity, TouchableWithoutFeedback } from \"react-native-gesture-handler\";\n\nconst { height, width } = Dimensions.get(\"screen\");\nvar iconColor = '#6FBE6F';\n\nclass Dropdown extends React.Component {\n\n  constructor() {\n    super();\n    // console.log();\n\n    this.state = {\n      isShow: false,\n      isChanged: false,\n      selected: '',\n      valueDropdown: [],\n      symbol: '',\n    };\n  }\n\n  async componentDidMount() {\n\n    this.setState({\n      selected: this.props.selected,\n      valueDropdown: this.props.value,\n      symbol: this.props.symbol,\n    });\n\n    console.log(this.state.selected);\n\n  }\n\n  renderOption = (item, index) => {\n    return(\n      <Block key={index}>\n        <TouchableWithoutFeedback onPress={() => this.selectChanged(item)}>\n          <Block style={{paddingBottom: 5}}>\n            <Block card style={{borderWidth: 1, borderColor: nowTheme.COLORS.GRAY}}>\n              <Block style={{paddingVertical: 10}}>\n                <Block>\n                  \n                  <Block>\n                    <Block style={{paddingHorizontal: 16}}>\n                      <Text\n                        style={{ \n                            fontFamily: 'montserrat-bold',\n                        }}\n                        size={14}\n                        color={nowTheme.COLORS.GRAY}\n                      >\n                        { item + ' ' + this.state.symbol }\n                      </Text>\n                    </Block>\n                  </Block>\n\n                </Block>\n              </Block>\n            </Block>\n          </Block>\n        </TouchableWithoutFeedback>\n      </Block>\n    )\n  }\n\n  selectChanged = (item) => {\n    this.setState({\n      isShow: !this.state.isShow, \n      selected: item,\n      isChanged: true\n    });\n\n    this.props.selectChanged(item);\n\n    this.setState({isChanged: false});\n  }\n\n  selectPressed = (status) =>{\n    this.setState({isShow: status});\n  }\n\n  render() {\n    const { \n      shadowless, \n      success, \n      error, \n      primary,\n      symbol, \n    } = this.props;\n\n    const inputStyles = [\n      styles.input,\n      !shadowless,\n      success && styles.success,\n      error && styles.error,\n      primary && styles.primary,\n      {...this.props.style}\n    ];\n\n    return (\n      <Block>\n\n        \n        <TouchableWithoutFeedback onPress={() => this.selectPressed(!this.state.isShow)}>\n          <Block style={{paddingBottom: 5}}>\n            <Block card style={{borderWidth: 1, borderColor: nowTheme.COLORS.GRAY}}>\n              <Block style={{paddingVertical: 10}}>\n                <Block row>\n                  \n                  <Block style={{width: '85%'}}>\n                    <Block style={{paddingHorizontal: 16}}>\n                      {this.state.isChanged == false ? (\n                        <Text\n                          style={{ \n                              fontFamily: 'montserrat-bold',\n                          }}\n                          size={14}\n                          color={nowTheme.COLORS.GRAY}\n                        >\n                          { this.state.selected + ' ' + symbol }\n                        </Text>\n                      ) : <Block />}\n                    </Block>\n                  </Block>\n\n                  <Block style={{width: '15%'}}>\n                    <Block center >\n                      <Icon\n                          size={15}\n                          color={nowTheme.COLORS.SECONDARY}\n                          name={ this.state.isShow == true ? \"chevron-up\" : \"chevron-down\"}\n                          family=\"Feather\"\n                      />\n                    </Block>\n                  </Block>\n\n                </Block>\n              </Block>\n            </Block>\n          </Block>\n        </TouchableWithoutFeedback>\n\n        { this.state.isShow == true ? \n          <Block>\n            {this.state.valueDropdown.map((item, index) => {\n              return(\n                this.renderOption(item, index)\n              )\n\n            })}\n          </Block>\n        : <Block /> }\n        \n      </Block>\n    );\n  }\n}\n\nDropdown.defaultProps = {\n  shadowless: false,\n  success: false,\n  error: false,\n  primary: false\n};\n\nDropdown.propTypes = {\n  shadowless: PropTypes.bool,\n  success: PropTypes.bool,\n  error: PropTypes.bool,\n  primary: PropTypes.bool\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    borderRadius: 30,\n    borderColor: nowTheme.COLORS.BORDER,\n    height: 44,\n    backgroundColor: '#FFFFFF'\n  },\n  success: {\n    borderColor: nowTheme.COLORS.INPUT_SUCCESS\n  },\n  error: {\n    borderColor: nowTheme.COLORS.INPUT_ERROR\n  },\n  primary: {\n    borderColor: nowTheme.COLORS.PRIMARY\n  },\n  shadow: {\n    shadowColor: nowTheme.COLORS.BLACK,\n    shadowOffset: { width: 0, height: 0.5 },\n    shadowRadius: 1,\n    shadowOpacity: 0.13,\n    elevation: 2,\n  }\n});\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}