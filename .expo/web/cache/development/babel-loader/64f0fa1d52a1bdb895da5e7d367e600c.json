{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\iym_mobile\\\\SC\\\\iym_mobile\\\\components\\\\LoadMore.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport { Block, Button, Text, theme } from 'galio-framework';\nimport Icon from \"./Icon\";\nimport Input from \"./Input\";\nimport Select from \"./Select\";\nimport { nowTheme, config } from \"../constants\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nvar DismissKeyboard = function DismissKeyboard(_ref) {\n  var children = _ref.children;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, children);\n};\n\nvar LoadMoreBar = function (_React$Component) {\n  _inherits(LoadMoreBar, _React$Component);\n\n  var _super = _createSuper(LoadMoreBar);\n\n  function LoadMoreBar() {\n    var _this2;\n\n    _classCallCheck(this, LoadMoreBar);\n\n    _this2 = _super.call(this);\n\n    _this2.ButtonClicked = function (limit) {\n      _this2.setState({\n        loading: true\n      });\n\n      _this2.props.ButtonClicked(limit);\n\n      setTimeout(function () {\n        _this2.setState({\n          loading: false\n        });\n      }, 2000);\n    };\n\n    _this2.state = {\n      loading: false\n    };\n    return _this2;\n  }\n\n  _createClass(LoadMoreBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var limit = this.props.limit;\n      return React.createElement(DismissKeyboard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        center: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        size: \"large\",\n        onPress: function onPress() {\n          return _this3.ButtonClicked(limit);\n        },\n        disabled: this.state.loading == true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: 'montserrat-bold'\n        },\n        size: 14,\n        color: nowTheme.COLORS.WHITE,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, this.state.loading == true ? React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: nowTheme.COLORS.WHITE,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 55\n        }\n      }) : 'Load More'))));\n    }\n  }]);\n\n  return LoadMoreBar;\n}(React.Component);\n\nLoadMoreBar.defaultProps = {\n  shadowless: false,\n  success: false,\n  error: false,\n  primary: false\n};\nLoadMoreBar.propTypes = {\n  shadowless: PropTypes.bool,\n  success: PropTypes.bool,\n  error: PropTypes.bool,\n  primary: PropTypes.bool\n};\nvar styles = StyleSheet.create({\n  input: {\n    borderRadius: 1,\n    borderColor: nowTheme.COLORS.BLACK,\n    height: 44\n  },\n  success: {\n    borderColor: nowTheme.COLORS.INPUT_SUCCESS\n  },\n  error: {\n    borderColor: nowTheme.COLORS.INPUT_ERROR\n  },\n  primary: {\n    borderColor: nowTheme.COLORS.PRIMARY\n  },\n  shadow: {\n    shadowColor: nowTheme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 0.5\n    },\n    shadowRadius: 1,\n    shadowOpacity: 0.13,\n    elevation: 2\n  },\n  cardDescription: {\n    padding: theme.SIZES.BASE / 1\n  },\n  pickerStyle: {\n    padding: theme.SIZES.BASE / 1,\n    borderRadius: 4,\n    borderColor: nowTheme.COLORS.BLACK\n  }\n});\nexport default LoadMoreBar;","map":{"version":3,"sources":["C:/xampp/htdocs/iym_mobile/SC/iym_mobile/components/LoadMore.js"],"names":["React","AsyncStorage","PropTypes","Block","Button","Text","theme","Icon","Input","Select","nowTheme","config","Dimensions","get","width","DismissKeyboard","children","Keyboard","dismiss","LoadMoreBar","ButtonClicked","limit","setState","loading","props","setTimeout","state","fontFamily","COLORS","WHITE","Component","defaultProps","shadowless","success","error","primary","propTypes","bool","styles","StyleSheet","create","input","borderRadius","borderColor","BLACK","height","INPUT_SUCCESS","INPUT_ERROR","PRIMARY","shadow","shadowColor","shadowOffset","shadowRadius","shadowOpacity","elevation","cardDescription","padding","SIZES","BASE","pickerStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { \n  Animated,\n  AsyncStorage,\n  ActivityIndicator,\n  Dimensions,\n  StyleSheet,\n  Image, \n  Keyboard,\n  Picker,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View\n} from 'react-native';\n\nimport PropTypes from 'prop-types';\n\nimport { Block, Button, Text, theme } from 'galio-framework';\n\nimport Icon from './Icon';\nimport Input from './Input';\nimport Select from './Select';\n\nimport { nowTheme, config } from \"../constants\";\n\nconst { width } = Dimensions.get(\"screen\");\n\nconst DismissKeyboard = ({ children }) => (\n  <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>{children}</TouchableWithoutFeedback>\n);\n\nclass LoadMoreBar extends React.Component {\n  \n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  ButtonClicked = (limit) => {\n        this.setState({\n            loading: true\n        });\n        \n        this.props.ButtonClicked(limit);\n\n        setTimeout(() => {\n            this.setState({\n                loading: false\n            })\n        }, 2000);\n  }\n  \n  render() {\n\n    const { limit } = this.props;\n\n    return (\n        <DismissKeyboard>\n            <Block center >\n                <Button \n                    size='large'\n                    onPress={ () => this.ButtonClicked(limit) }\n                    disabled={ this.state.loading == true }\n                >\n                    <Text\n                        style={{ fontFamily: 'montserrat-bold' }}\n                        size={14}\n                        color={nowTheme.COLORS.WHITE}\n                    >\n                        {this.state.loading == true ? <ActivityIndicator size=\"large\" color={nowTheme.COLORS.WHITE} /> : 'Load More' }\n\n                    </Text>\n                </Button>\n            </Block>\n      </DismissKeyboard>\n    );\n  }\n}\n\nLoadMoreBar.defaultProps = {\n  shadowless: false,\n  success: false,\n  error: false,\n  primary: false\n};\n\nLoadMoreBar.propTypes = {\n  shadowless: PropTypes.bool,\n  success: PropTypes.bool,\n  error: PropTypes.bool,\n  primary: PropTypes.bool\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    borderRadius: 1,\n    borderColor: nowTheme.COLORS.BLACK,\n    height: 44,\n  },\n  success: {\n    borderColor: nowTheme.COLORS.INPUT_SUCCESS\n  },\n  error: {\n    borderColor: nowTheme.COLORS.INPUT_ERROR\n  },\n  primary: {\n    borderColor: nowTheme.COLORS.PRIMARY\n  },\n  shadow: {\n    shadowColor: nowTheme.COLORS.BLACK,\n    shadowOffset: { width: 0, height: 0.5 },\n    shadowRadius: 1,\n    shadowOpacity: 0.13,\n    elevation: 2,\n  },\n  cardDescription: {\n    padding: theme.SIZES.BASE / 1\n  },\n  pickerStyle: {\n    padding: theme.SIZES.BASE / 1,\n    borderRadius: 4,\n    borderColor: nowTheme.COLORS.BLACK,\n  }\n});\n\nexport default LoadMoreBar;\n"]},"metadata":{},"sourceType":"module"}