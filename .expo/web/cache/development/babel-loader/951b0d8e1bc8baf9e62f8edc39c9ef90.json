{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\iym_mobile\\\\SC\\\\iym_mobile\\\\components\\\\SelectMultiple.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\nimport { Block, Input, theme } from \"galio-framework\";\nimport Icon from \"./Icon\";\nimport Text from \"./Text\";\nimport Autocomplete from \"./Autocomplete\";\nimport { nowTheme, config } from \"../constants\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar iconColor = '#6FBE6F';\n\nvar DropdownMultiple = function (_React$Component) {\n  _inherits(DropdownMultiple, _React$Component);\n\n  var _super = _createSuper(DropdownMultiple);\n\n  function DropdownMultiple() {\n    var _this;\n\n    _classCallCheck(this, DropdownMultiple);\n\n    _this = _super.call(this);\n\n    _this.selectChanged = function (item) {\n      _this.setState({\n        isShow: !_this.state.isShow,\n        selected: item,\n        isChanged: true\n      });\n\n      _this.props.selectChanged(item);\n\n      _this.setState({\n        isChanged: false\n      });\n    };\n\n    _this.selectPressed = function (status) {\n      _this.setState({\n        isShow: status\n      });\n    };\n\n    _this.selectedValue = function (item, index) {\n      return React.createElement(Block, {\n        key: index,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.removeSelected(item, _this.props.category);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingRight: 5,\n          paddingBottom: 5\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }\n      }, React.createElement(Block, {\n        card: true,\n        style: {\n          paddingLeft: 10,\n          borderWidth: 1,\n          borderColor: nowTheme.COLORS.GRAY\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingVertical: 10\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }, React.createElement(Block, {\n        row: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, React.createElement(Block, {\n        style: {\n          width: '85%'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        title: item.name,\n        size: 15,\n        bold: true,\n        color: nowTheme.COLORS.GRAY,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      })), React.createElement(Block, {\n        style: {\n          width: '15%'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 19\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingHorizontal: 10\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        size: 20,\n        color: nowTheme.COLORS.GRAY,\n        name: \"x-circle\",\n        family: \"Feather\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 23\n        }\n      })))))))));\n    };\n\n    _this.removeSelected = function (item, category) {\n      Keyboard.dismiss();\n\n      _this.setState({\n        isClicked: true,\n        valueText: ''\n      });\n\n      _this.props.removeSelected(item, category);\n    };\n\n    _this.inputValueUpdate = function (val, prop) {\n      _this.setState({\n        isClicked: false,\n        valueText: val\n      });\n\n      _this.props.textChanged(val, prop);\n    };\n\n    _this.valueFocus = function () {\n      _this.setState({\n        valueSelected: value\n      });\n    };\n\n    _this.valueBlur = function () {\n      _this.setState({\n        isClicked: true,\n        valueText: _this.props.value\n      });\n    };\n\n    _this.renderItem = function (item, index) {\n      return React.createElement(Block, {\n        key: index,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.selectedItem(item, _this.props.category);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingBottom: 5\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }\n      }, React.createElement(Block, {\n        card: true,\n        style: {\n          backgroundColor: nowTheme.COLORS.BLOCK,\n          borderWidth: 1,\n          borderColor: nowTheme.COLORS.GRAY\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingHorizontal: 15,\n          paddingVertical: 5\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        title: item.name,\n        size: 15,\n        bold: true,\n        color: nowTheme.COLORS.GRAY,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }\n      }))))));\n    };\n\n    _this.selectedItem = function (item, category) {\n      Keyboard.dismiss();\n\n      _this.setState({\n        isClicked: true,\n        valueText: ''\n      });\n\n      _this.props.selectedItem(item, category);\n    };\n\n    _this.textChanged = function (val, props) {\n      _this.props.textChanged(val, props);\n    };\n\n    _this.state = {\n      isShow: false,\n      isChanged: false,\n      selected: '',\n      valueDropdown: [],\n      symbol: '',\n      category: '',\n      title: '',\n      dataLogin: [],\n      listItems: [],\n      Fitter_Code: {},\n      isClicked: false,\n      valueText: ''\n    };\n    return _this;\n  }\n\n  _createClass(DropdownMultiple, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data_user, data_login;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('data_user'));\n\n            case 2:\n              data_user = _context.sent;\n              data_user = JSON.parse(data_user);\n              data_login = {\n                project: data_user.project_id,\n                api: data_user.api_key\n              };\n              this.setState({\n                dataLogin: data_login,\n                selected: this.props.selected,\n                valueDropdown: this.props.value,\n                category: this.props.category,\n                valueText: this.props.value\n              });\n              return _context.abrupt(\"return\", function () {\n                isMounted = false;\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          shadowless = _this$props.shadowless,\n          success = _this$props.success,\n          error = _this$props.error,\n          primary = _this$props.primary,\n          symbol = _this$props.symbol,\n          placeholder = _this$props.placeholder,\n          data = _this$props.data,\n          category = _this$props.category,\n          categorySelected = _this$props.categorySelected,\n          selectedValue = _this$props.selectedValue,\n          value = _this$props.value,\n          style = _this$props.style;\n      var inputStyles = [styles.input, !shadowless, success && styles.success, error && styles.error, primary && styles.primary, _objectSpread({}, this.props.style)];\n      return React.createElement(Block, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingBottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, React.createElement(Block, {\n        card: true,\n        style: {\n          borderWidth: 1,\n          borderColor: nowTheme.COLORS.GRAY\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, React.createElement(Block, {\n        flex: 2,\n        style: {\n          paddingHorizontal: 10,\n          paddingVertical: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      }, React.createElement(Block, {\n        row: true,\n        style: {\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 23\n        }\n      }, selectedValue.map(function (item, index) {\n        return _this2.selectedValue(item, index);\n      }), React.createElement(Block, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        onChangeText: function onChangeText(val) {\n          return _this2.inputValueUpdate(val, category);\n        },\n        onBlur: function onBlur() {\n          return _this2.valueFocus();\n        },\n        onBlur: function onBlur() {\n          return _this2.valueBlur();\n        },\n        placeholder: placeholder,\n        value: categorySelected == category ? this.state.valueText : this.state.valueText,\n        placeholderTextColor: nowTheme.COLORS.GRAY,\n        style: [style, {\n          width: width / 1.35,\n          borderWidth: 1,\n          borderColor: nowTheme.COLORS.GRAY\n        }],\n        color: nowTheme.COLORS.GRAY,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 27\n        }\n      })))))), categorySelected == category && this.state.isClicked == false ? this.props.data.map(function (item, index) {\n        return _this2.renderItem(item, index);\n      }) : null);\n    }\n  }]);\n\n  return DropdownMultiple;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  input: {\n    borderRadius: 30,\n    borderColor: nowTheme.COLORS.BORDER,\n    height: 44,\n    backgroundColor: '#FFFFFF'\n  },\n  success: {\n    borderColor: nowTheme.COLORS.INPUT_SUCCESS\n  },\n  error: {\n    borderColor: nowTheme.COLORS.INPUT_ERROR\n  },\n  primary: {\n    borderColor: nowTheme.COLORS.PRIMARY\n  },\n  shadow: {\n    shadowColor: nowTheme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 0.5\n    },\n    shadowRadius: 1,\n    shadowOpacity: 0.13,\n    elevation: 2\n  }\n});\nexport default DropdownMultiple;","map":{"version":3,"sources":["C:/xampp/htdocs/iym_mobile/SC/iym_mobile/components/SelectMultiple.js"],"names":["React","AsyncStorage","PropTypes","Block","Input","theme","Icon","Text","Autocomplete","nowTheme","config","Dimensions","get","height","width","iconColor","DropdownMultiple","selectChanged","item","setState","isShow","state","selected","isChanged","props","selectPressed","status","selectedValue","index","removeSelected","category","paddingRight","paddingBottom","paddingLeft","borderWidth","borderColor","COLORS","GRAY","paddingVertical","name","paddingHorizontal","Keyboard","dismiss","isClicked","valueText","inputValueUpdate","val","prop","textChanged","valueFocus","valueSelected","value","valueBlur","renderItem","selectedItem","backgroundColor","BLOCK","valueDropdown","symbol","title","dataLogin","listItems","Fitter_Code","getItem","data_user","JSON","parse","data_login","project","project_id","api","api_key","isMounted","shadowless","success","error","primary","placeholder","data","categorySelected","style","inputStyles","styles","input","flexWrap","map","Component","StyleSheet","create","borderRadius","BORDER","INPUT_SUCCESS","INPUT_ERROR","PRIMARY","shadow","shadowColor","BLACK","shadowOffset","shadowRadius","shadowOpacity","elevation"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;SAGEC,Y;;;;;AAOF,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,KAAvB,QAAoC,iBAApC;AAEA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,OAAOC,YAAP;AACA,SAASC,QAAT,EAAmBC,MAAnB;;AAEA,sBAA0BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,MAAR,mBAAQA,MAAR;AAAA,IAAgBC,KAAhB,mBAAgBA,KAAhB;;AACA,IAAIC,SAAS,GAAG,SAAhB;;IAEMC,gB;;;;;AAEJ,8BAAc;AAAA;;AAAA;;AACZ;;AADY,UA8CdC,aA9Cc,GA8CE,UAACC,IAAD,EAAU;AACxB,YAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE,CAAC,MAAKC,KAAL,CAAWD,MADR;AAEZE,QAAAA,QAAQ,EAAEJ,IAFE;AAGZK,QAAAA,SAAS,EAAE;AAHC,OAAd;;AAMA,YAAKC,KAAL,CAAWP,aAAX,CAAyBC,IAAzB;;AAEA,YAAKC,QAAL,CAAc;AAACI,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACD,KAxDa;;AAAA,UA0DdE,aA1Dc,GA0DE,UAACC,MAAD,EAAW;AACzB,YAAKP,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEM;AAAT,OAAd;AACD,KA5Da;;AAAA,UA8IdC,aA9Ic,GA8IE,UAACT,IAAD,EAAOU,KAAP,EAAiB;AAC/B,aACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKC,cAAL,CAAoBX,IAApB,EAA0B,MAAKM,KAAL,CAAWM,QAArC,CAAN;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE,CAAf;AAAkBC,UAAAA,aAAa,EAAE;AAAjC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAY,QAAA,KAAK,EAAE;AAACC,UAAAA,WAAW,EAAE,EAAd;AAAkBC,UAAAA,WAAW,EAAE,CAA/B;AAAkCC,UAAAA,WAAW,EAAE1B,QAAQ,CAAC2B,MAAT,CAAgBC;AAA/D,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,GAAG,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAACxB,UAAAA,KAAK,EAAE;AAAR,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEI,IAAI,CAACqB,IADd;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,IAAI,MAHN;AAIE,QAAA,KAAK,EAAE9B,QAAQ,CAAC2B,MAAT,CAAgBC,IAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAUE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAACvB,UAAAA,KAAK,EAAE;AAAR,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAC0B,UAAAA,iBAAiB,EAAE;AAApB,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACI,QAAA,IAAI,EAAE,EADV;AAEI,QAAA,KAAK,EAAE/B,QAAQ,CAAC2B,MAAT,CAAgBC,IAF3B;AAGI,QAAA,IAAI,EAAE,UAHV;AAII,QAAA,MAAM,EAAC,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAVF,CADF,CADF,CADF,CADF,CADF,CADF;AAiCD,KAhLa;;AAAA,UAkLdR,cAlLc,GAkLG,UAACX,IAAD,EAAOY,QAAP,EAAoB;AACnCW,MAAAA,QAAQ,CAACC,OAAT;;AACA,YAAKvB,QAAL,CAAc;AACZwB,QAAAA,SAAS,EAAE,IADC;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;;AAIA,YAAKpB,KAAL,CAAWK,cAAX,CAA0BX,IAA1B,EAAgCY,QAAhC;AACD,KAzLa;;AAAA,UA2Lde,gBA3Lc,GA2LK,UAACC,GAAD,EAAMC,IAAN,EAAe;AAChC,YAAK5B,QAAL,CAAc;AAACwB,QAAAA,SAAS,EAAE,KAAZ;AAAmBC,QAAAA,SAAS,EAAEE;AAA9B,OAAd;;AACA,YAAKtB,KAAL,CAAWwB,WAAX,CAAuBF,GAAvB,EAA4BC,IAA5B;AACD,KA9La;;AAAA,UAgMdE,UAhMc,GAgMD,YAAM;AACjB,YAAK9B,QAAL,CAAc;AAAC+B,QAAAA,aAAa,EAAEC;AAAhB,OAAd;AACD,KAlMa;;AAAA,UAoMdC,SApMc,GAoMF,YAAM;AAChB,YAAKjC,QAAL,CAAc;AAACwB,QAAAA,SAAS,EAAE,IAAZ;AAAkBC,QAAAA,SAAS,EAAE,MAAKpB,KAAL,CAAW2B;AAAxC,OAAd;AACD,KAtMa;;AAAA,UAwMdE,UAxMc,GAwMD,UAACnC,IAAD,EAAOU,KAAP,EAAiB;AAE5B,aACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAK0B,YAAL,CAAkBpC,IAAlB,EAAwB,MAAKM,KAAL,CAAWM,QAAnC,CAAN;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAACE,UAAAA,aAAa,EAAE;AAAhB,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAY,QAAA,KAAK,EAAE;AAACuB,UAAAA,eAAe,EAAE9C,QAAQ,CAAC2B,MAAT,CAAgBoB,KAAlC;AAAyCtB,UAAAA,WAAW,EAAE,CAAtD;AAAyDC,UAAAA,WAAW,EAAE1B,QAAQ,CAAC2B,MAAT,CAAgBC;AAAtF,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAACG,UAAAA,iBAAiB,EAAE,EAApB;AAAwBF,UAAAA,eAAe,EAAE;AAAzC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACI,QAAA,KAAK,EAAEpB,IAAI,CAACqB,IADhB;AAEI,QAAA,IAAI,EAAE,EAFV;AAGI,QAAA,IAAI,MAHR;AAII,QAAA,KAAK,EAAE9B,QAAQ,CAAC2B,MAAT,CAAgBC,IAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CADF,CADF,CADF;AAkBD,KA5Na;;AAAA,UA8NdiB,YA9Nc,GA8NC,UAACpC,IAAD,EAAOY,QAAP,EAAoB;AACjCW,MAAAA,QAAQ,CAACC,OAAT;;AACA,YAAKvB,QAAL,CAAc;AACZwB,QAAAA,SAAS,EAAE,IADC;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;;AAIA,YAAKpB,KAAL,CAAW8B,YAAX,CAAwBpC,IAAxB,EAA8BY,QAA9B;AACD,KArOa;;AAAA,UA4OdkB,WA5Oc,GA4OA,UAACF,GAAD,EAAMtB,KAAN,EAAgB;AAC5B,YAAKA,KAAL,CAAWwB,WAAX,CAAuBF,GAAvB,EAA4BtB,KAA5B;AACD,KA9Oa;;AAIZ,UAAKH,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE,KADG;AAEXG,MAAAA,SAAS,EAAE,KAFA;AAGXD,MAAAA,QAAQ,EAAE,EAHC;AAIXmC,MAAAA,aAAa,EAAE,EAJJ;AAKXC,MAAAA,MAAM,EAAE,EALG;AAMX5B,MAAAA,QAAQ,EAAE,EANC;AAOX6B,MAAAA,KAAK,EAAE,EAPI;AASXC,MAAAA,SAAS,EAAE,EATA;AAUXC,MAAAA,SAAS,EAAE,EAVA;AAYXC,MAAAA,WAAW,EAAE,EAZF;AAcXnB,MAAAA,SAAS,EAAE,KAdA;AAeXC,MAAAA,SAAS,EAAE;AAfA,KAAb;AAJY;AAsBb;;;;WAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEwB3C,YAAY,CAAC8D,OAAb,CAAqB,WAArB,CAFxB;;AAAA;AAEMC,cAAAA,SAFN;AAGMA,cAAAA,SAHN,GAGkBC,IAAI,CAACC,KAAL,CAAWF,SAAX,CAHlB;AAKMG,cAAAA,UALN,GAKmB;AACfC,gBAAAA,OAAO,EAAEJ,SAAS,CAACK,UADJ;AAEfC,gBAAAA,GAAG,EAAEN,SAAS,CAACO;AAFA,eALnB;AAUE,mBAAKpD,QAAL,CAAc;AACZyC,gBAAAA,SAAS,EAAEO,UADC;AAEZ7C,gBAAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWF,QAFT;AAGZmC,gBAAAA,aAAa,EAAE,KAAKjC,KAAL,CAAW2B,KAHd;AAIZrB,gBAAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWM,QAJT;AAKZc,gBAAAA,SAAS,EAAE,KAAKpB,KAAL,CAAW2B;AALV,eAAd;AAVF,+CAkBS,YAAM;AAAEqB,gBAAAA,SAAS,GAAG,KAAZ;AAAmB,eAlBpC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAsCA,kBAAS;AAAA;;AACP,wBAaI,KAAKhD,KAbT;AAAA,UACEiD,UADF,eACEA,UADF;AAAA,UAEEC,OAFF,eAEEA,OAFF;AAAA,UAGEC,KAHF,eAGEA,KAHF;AAAA,UAIEC,OAJF,eAIEA,OAJF;AAAA,UAKElB,MALF,eAKEA,MALF;AAAA,UAMEmB,WANF,eAMEA,WANF;AAAA,UAOEC,IAPF,eAOEA,IAPF;AAAA,UAQEhD,QARF,eAQEA,QARF;AAAA,UASEiD,gBATF,eASEA,gBATF;AAAA,UAUEpD,aAVF,eAUEA,aAVF;AAAA,UAWEwB,KAXF,eAWEA,KAXF;AAAA,UAYE6B,KAZF,eAYEA,KAZF;AAeA,UAAMC,WAAW,GAAG,CAClBC,MAAM,CAACC,KADW,EAElB,CAACV,UAFiB,EAGlBC,OAAO,IAAIQ,MAAM,CAACR,OAHA,EAIlBC,KAAK,IAAIO,MAAM,CAACP,KAJE,EAKlBC,OAAO,IAAIM,MAAM,CAACN,OALA,oBAMd,KAAKpD,KAAL,CAAWwD,KANG,EAApB;AASA,aACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAChD,UAAAA,aAAa,EAAE;AAAhB,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAY,QAAA,KAAK,EAAE;AAACE,UAAAA,WAAW,EAAE,CAAd;AAAiBC,UAAAA,WAAW,EAAE1B,QAAQ,CAAC2B,MAAT,CAAgBC;AAA9C,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,CAAb;AAAgB,QAAA,KAAK,EAAE;AAACG,UAAAA,iBAAiB,EAAE,EAApB;AAAwBF,UAAAA,eAAe,EAAE;AAAzC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,MAAV;AAAW,QAAA,KAAK,EAAE;AAAC8C,UAAAA,QAAQ,EAAE;AAAX,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGIzD,aAAa,CAAC0D,GAAd,CAAkB,UAACnE,IAAD,EAAOU,KAAP,EAAiB;AACjC,eAAO,MAAI,CAACD,aAAL,CAAmBT,IAAnB,EAAyBU,KAAzB,CAAP;AACD,OAFD,CAHJ,EAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,YAAY,EAAE,sBAACkB,GAAD;AAAA,iBAAS,MAAI,CAACD,gBAAL,CAAsBC,GAAtB,EAA2BhB,QAA3B,CAAT;AAAA,SADhB;AAEE,QAAA,MAAM,EAAE;AAAA,iBAAM,MAAI,CAACmB,UAAL,EAAN;AAAA,SAFV;AAGE,QAAA,MAAM,EAAE;AAAA,iBAAM,MAAI,CAACG,SAAL,EAAN;AAAA,SAHV;AAIE,QAAA,WAAW,EAAEyB,WAJf;AAKE,QAAA,KAAK,EAAGE,gBAAgB,IAAIjD,QAArB,GAAiC,KAAKT,KAAL,CAAWuB,SAA5C,GAAwD,KAAKvB,KAAL,CAAWuB,SAL5E;AAOE,QAAA,oBAAoB,EAAEnC,QAAQ,CAAC2B,MAAT,CAAgBC,IAPxC;AAQE,QAAA,KAAK,EAAE,CACL2C,KADK,EAEL;AACElE,UAAAA,KAAK,EAAEA,KAAK,GAAG,IADjB;AAEEoB,UAAAA,WAAW,EAAE,CAFf;AAGEC,UAAAA,WAAW,EAAE1B,QAAQ,CAAC2B,MAAT,CAAgBC;AAH/B,SAFK,CART;AAmBE,QAAA,KAAK,EAAE5B,QAAQ,CAAC2B,MAAT,CAAgBC,IAnBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARF,CADJ,CADJ,CADF,CADJ,EA0CO0C,gBAAgB,IAAIjD,QAApB,IAAgC,KAAKT,KAAL,CAAWsB,SAAX,IAAwB,KAAzD,GACE,KAAKnB,KAAL,CAAWsD,IAAX,CAAgBO,GAAhB,CAAoB,UAACnE,IAAD,EAAOU,KAAP,EAAiB;AACnC,eAAO,MAAI,CAACyB,UAAL,CAAgBnC,IAAhB,EAAsBU,KAAtB,CAAP;AACD,OAFD,CADF,GAII,IA9CV,CADJ;AAqDD;;;;EA9I4B5B,KAAK,CAACsF,S;;AAoPrC,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,KAAK,EAAE;AACLM,IAAAA,YAAY,EAAE,EADT;AAELtD,IAAAA,WAAW,EAAE1B,QAAQ,CAAC2B,MAAT,CAAgBsD,MAFxB;AAGL7E,IAAAA,MAAM,EAAE,EAHH;AAIL0C,IAAAA,eAAe,EAAE;AAJZ,GADwB;AAO/BmB,EAAAA,OAAO,EAAE;AACPvC,IAAAA,WAAW,EAAE1B,QAAQ,CAAC2B,MAAT,CAAgBuD;AADtB,GAPsB;AAU/BhB,EAAAA,KAAK,EAAE;AACLxC,IAAAA,WAAW,EAAE1B,QAAQ,CAAC2B,MAAT,CAAgBwD;AADxB,GAVwB;AAa/BhB,EAAAA,OAAO,EAAE;AACPzC,IAAAA,WAAW,EAAE1B,QAAQ,CAAC2B,MAAT,CAAgByD;AADtB,GAbsB;AAgB/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAEtF,QAAQ,CAAC2B,MAAT,CAAgB4D,KADvB;AAENC,IAAAA,YAAY,EAAE;AAAEnF,MAAAA,KAAK,EAAE,CAAT;AAAYD,MAAAA,MAAM,EAAE;AAApB,KAFR;AAGNqF,IAAAA,YAAY,EAAE,CAHR;AAINC,IAAAA,aAAa,EAAE,IAJT;AAKNC,IAAAA,SAAS,EAAE;AALL;AAhBuB,CAAlB,CAAf;AAyBA,eAAepF,gBAAf","sourcesContent":["import React from \"react\";\n\nimport { \n  AsyncStorage, \n  Dimensions, \n  Keyboard,\n  StyleSheet,\n  TouchableOpacity \n} from \"react-native\";\n\nimport PropTypes from 'prop-types';\n\nimport { Block, Input, theme } from \"galio-framework\";\n\nimport Icon from './Icon';\nimport Text from './Text';\nimport Autocomplete from './Autocomplete';\nimport { nowTheme, config } from \"../constants\";\n\nconst { height, width } = Dimensions.get(\"screen\");\nvar iconColor = '#6FBE6F';\n\nclass DropdownMultiple extends React.Component {\n\n  constructor() {\n    super();\n    // console.log();\n\n    this.state = {\n      isShow: false,\n      isChanged: false,\n      selected: '',\n      valueDropdown: [],\n      symbol: '',\n      category: '',\n      title: '',\n\n      dataLogin: [],\n      listItems: [],\n\n      Fitter_Code: {},\n      \n      isClicked: false,\n      valueText: '',\n\n    };\n  }\n\n  async componentDidMount() {\n\n    var data_user = await AsyncStorage.getItem('data_user');\n    var data_user = JSON.parse(data_user);\n\n    var data_login = {\n      project: data_user.project_id,\n      api: data_user.api_key,\n    }\n\n    this.setState({\n      dataLogin: data_login,\n      selected: this.props.selected,\n      valueDropdown: this.props.value,\n      category: this.props.category,\n      valueText: this.props.value,\n    });\n\n    return () => { isMounted = false };\n\n  }\n\n  selectChanged = (item) => {\n    this.setState({\n      isShow: !this.state.isShow, \n      selected: item,\n      isChanged: true\n    });\n\n    this.props.selectChanged(item);\n\n    this.setState({isChanged: false});\n  }\n\n  selectPressed = (status) =>{\n    this.setState({isShow: status});\n  }\n\n  render() {\n    const { \n      shadowless, \n      success, \n      error, \n      primary,\n      symbol, \n      placeholder,\n      data,\n      category,\n      categorySelected,\n      selectedValue,\n      value,\n      style,\n    } = this.props;\n\n    const inputStyles = [\n      styles.input,\n      !shadowless,\n      success && styles.success,\n      error && styles.error,\n      primary && styles.primary,\n      {...this.props.style}\n    ];\n\n    return (\n        <Block>\n            <Block style={{paddingBottom: 5}}>\n              <Block card style={{borderWidth: 1, borderColor: nowTheme.COLORS.GRAY}}>\n                  <Block flex={2} style={{paddingHorizontal: 10, paddingVertical: 10}}>\n                      <Block row style={{flexWrap: 'wrap'}}>\n\n                        {\n                          selectedValue.map((item, index) => {\n                            return this.selectedValue(item, index)\n                          })\n                        }\n\n                        <Block>\n                          <Input\n                            onChangeText={(val) => this.inputValueUpdate(val, category)}\n                            onBlur={() => this.valueFocus() }\n                            onBlur={() => this.valueBlur() }\n                            placeholder={placeholder}\n                            value={(categorySelected == category) ? this.state.valueText : this.state.valueText }\n                            // value={value}\n                            placeholderTextColor={nowTheme.COLORS.GRAY}\n                            style={[\n                              style,\n                              {\n                                width: width / 1.35,\n                                borderWidth: 1, \n                                borderColor: nowTheme.COLORS.GRAY\n                                // borderWidth: 0,\n                                // marginTop: -20,\n\n                              }\n                            ]}\n                            color={nowTheme.COLORS.GRAY}\n                          />\n                        </Block>\n\n                      </Block>\n                  </Block>\n              </Block>\n            </Block>\n\n            {\n              (categorySelected == category && this.state.isClicked == false) ? (\n                this.props.data.map((item, index) => {\n                  return this.renderItem(item, index)\n                })\n              ) : null \n            }\n\n\n        </Block>\n    );\n  }\n\n  selectedValue = (item, index) => {\n    return(\n      <Block key={index}>\n        <TouchableOpacity onPress={() => this.removeSelected(item, this.props.category)}>\n          <Block style={{paddingRight: 5, paddingBottom: 5}}>\n            <Block card style={{paddingLeft: 10, borderWidth: 1, borderColor: nowTheme.COLORS.GRAY }}>\n              <Block style={{paddingVertical: 10}}>\n                <Block row>\n                  <Block style={{width: '85%'}}>\n                    <Text\n                      title={item.name}\n                      size={15}\n                      bold\n                      color={nowTheme.COLORS.GRAY}\n                    />\n                  </Block>\n\n                  <Block style={{width: '15%'}}>\n                    <Block style={{paddingHorizontal: 10}}>\n                      <Icon\n                          size={20}\n                          color={nowTheme.COLORS.GRAY}\n                          name={\"x-circle\"}\n                          family=\"Feather\"\n                      />\n                    </Block>\n                  </Block>\n                </Block>\n              </Block>\n            </Block>\n          </Block>\n        </TouchableOpacity>\n      </Block>\n    )\n  }\n\n  removeSelected = (item, category) => {\n    Keyboard.dismiss();\n    this.setState({\n      isClicked: true,\n      valueText: '',\n    });\n    this.props.removeSelected(item, category)\n  }\n\n  inputValueUpdate = (val, prop) => {\n    this.setState({isClicked: false, valueText: val});\n    this.props.textChanged(val, prop)\n  }\n\n  valueFocus = () => {\n    this.setState({valueSelected: value});\n  }\n\n  valueBlur = () => {\n    this.setState({isClicked: true, valueText: this.props.value});\n  }\n\n  renderItem = (item, index) => {\n\n    return(\n      <Block key={index}>\n        <TouchableOpacity onPress={() => this.selectedItem(item, this.props.category) }>\n          <Block style={{paddingBottom: 5}}>\n            <Block card style={{backgroundColor: nowTheme.COLORS.BLOCK, borderWidth: 1, borderColor: nowTheme.COLORS.GRAY}}>\n              <Block style={{paddingHorizontal: 15, paddingVertical: 5}}>\n                <Text\n                    title={item.name}\n                    size={15}\n                    bold\n                    color={nowTheme.COLORS.GRAY}\n                />\n              </Block>\n            </Block>\n          </Block>\n        </TouchableOpacity>\n      </Block>\n    )\n  }\n\n  selectedItem = (item, category) => {\n    Keyboard.dismiss();\n    this.setState({\n      isClicked: true,\n      valueText: '',\n    });\n    this.props.selectedItem(item, category)\n  }\n\n  // selectedItem = (item, category) => {\n  //   this.props.selectedItem(item, category);\n  //   // this.setState({[category] : item});\n  // }\n\n  textChanged = (val, props) => {\n    this.props.textChanged(val, props);        \n  }\n\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    borderRadius: 30,\n    borderColor: nowTheme.COLORS.BORDER,\n    height: 44,\n    backgroundColor: '#FFFFFF'\n  },\n  success: {\n    borderColor: nowTheme.COLORS.INPUT_SUCCESS\n  },\n  error: {\n    borderColor: nowTheme.COLORS.INPUT_ERROR\n  },\n  primary: {\n    borderColor: nowTheme.COLORS.PRIMARY\n  },\n  shadow: {\n    shadowColor: nowTheme.COLORS.BLACK,\n    shadowOffset: { width: 0, height: 0.5 },\n    shadowRadius: 1,\n    shadowOpacity: 0.13,\n    elevation: 2,\n  }\n});\n\nexport default DropdownMultiple;\n"]},"metadata":{},"sourceType":"module"}