{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\iym_mobile\\\\SC\\\\iym_mobile\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport * as Notifications from 'expo-notifications';\nimport Constants from 'expo-constants';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AppLoading } from 'expo';\nimport * as Font from 'expo-font';\nimport { Asset } from 'expo-asset';\nimport { Block, GalioProvider } from 'galio-framework';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Screens from \"./navigation/Screens\";\nimport { Images, articles, nowTheme } from \"./constants\";\nvar assetImages = [Images.Onboarding, Images.Logo, Images.Pro, Images.NowLogo, Images.iOSLogo, Images.androidLogo, Images.ProfilePicture, Images.CreativeTimLogo, Images.InvisionLogo, Images.RegisterBackground, Images.ProfileBackground];\narticles.map(function (article) {\n  return assetImages.push(article.image);\n});\n\nfunction cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isLoadingComplete: false,\n      fontLoaded: false\n    };\n\n    _this._loadResourcesAsync = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'montserrat-regular': require(\"./assets/font/Montserrat-Regular.ttf\"),\n                'montserrat-bold': require(\"./assets/font/Montserrat-Bold.ttf\")\n              }));\n\n            case 2:\n              _this.setState({\n                fontLoaded: true\n              });\n\n              return _context.abrupt(\"return\", Promise.all(_toConsumableArray(cacheImages(assetImages))));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._handleLoadingError = function (error) {\n      console.warn(error);\n    };\n\n    _this._handleFinishLoading = function () {\n      if (_this.state.fontLoaded) {\n        _this.setState({\n          isLoadingComplete: true\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var status;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Notifications.getPermissionsAsync());\n\n            case 2:\n              status = _context2.sent;\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isLoadingComplete) {\n        return React.createElement(AppLoading, {\n          startAsync: this._loadResourcesAsync,\n          onError: this._handleLoadingError,\n          onFinish: this._handleFinishLoading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }\n        }, React.createElement(GalioProvider, {\n          theme: nowTheme,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }\n        }, React.createElement(Block, {\n          flex: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }, React.createElement(Screens, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }\n        }))));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/xampp/htdocs/iym_mobile/SC/iym_mobile/App.js"],"names":["React","Notifications","Constants","AppLoading","Font","Asset","Block","GalioProvider","NavigationContainer","Screens","Images","articles","nowTheme","assetImages","Onboarding","Logo","Pro","NowLogo","iOSLogo","androidLogo","ProfilePicture","CreativeTimLogo","InvisionLogo","RegisterBackground","ProfileBackground","map","article","push","image","cacheImages","images","Image","prefetch","fromModule","downloadAsync","App","state","isLoadingComplete","fontLoaded","_loadResourcesAsync","loadAsync","require","setState","Promise","all","_handleLoadingError","error","console","warn","_handleFinishLoading","getPermissionsAsync","status","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport * as Notifications from 'expo-notifications';\nimport Constants from 'expo-constants';\n\nimport {\n  Image \n} from 'react-native';\n\nimport { AppLoading } from 'expo';\nimport * as Font from 'expo-font';\nimport { Asset } from 'expo-asset';\nimport { Block, GalioProvider } from 'galio-framework';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport Screens from './navigation/Screens';\nimport { Images, articles, nowTheme } from './constants';\n\n// import NetInfo from \"@react-native-community/netinfo\";\n\n// cache app images\nconst assetImages = [\n  Images.Onboarding,\n  Images.Logo,\n  Images.Pro,\n  Images.NowLogo,\n  Images.iOSLogo,\n  Images.androidLogo,\n  Images.ProfilePicture,\n  Images.CreativeTimLogo,\n  Images.InvisionLogo,\n  Images.RegisterBackground,\n  Images.ProfileBackground\n];\n\n// cache product images\narticles.map(article => assetImages.push(article.image));\n\nfunction cacheImages(images) {\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\n\nexport default class App extends React.Component {\n  state = {\n    isLoadingComplete: false,\n    fontLoaded: false\n  };\n\n  // async componentDidMount() {\n  //   Font.loadAsync({\n  //     'montserrat-regular': require('./assets/font/Montserrat-Regular.ttf'),\n  //     'montserrat-bold': require('./assets/font/Montserrat-Bold.ttf')\n  //   });\n\n  //   this.setState({ fontLoaded: true });\n  // }\n\n  async componentDidMount() {\n    var status = await Notifications.getPermissionsAsync();\n  }\n\n  render() {\n\n    if (!this.state.isLoadingComplete) {\n      return (\n        <AppLoading\n          startAsync={this._loadResourcesAsync}\n          onError={this._handleLoadingError}\n          onFinish={this._handleFinishLoading}\n        />\n      );\n    } else {\n\n      return (\n        <NavigationContainer>\n          <GalioProvider theme={nowTheme}>\n            <Block flex>\n              <Screens />\n            </Block>\n          </GalioProvider>\n        </NavigationContainer>\n      );\n    }\n  }\n\n  _loadResourcesAsync = async () => {\n    await Font.loadAsync({\n      'montserrat-regular': require('./assets/font/Montserrat-Regular.ttf'),\n      'montserrat-bold': require('./assets/font/Montserrat-Bold.ttf')\n    });    \n\n    this.setState({ fontLoaded: true });\n    return Promise.all([...cacheImages(assetImages)]);\n  };\n\n  _handleLoadingError = error => {\n    // In this case, you might want to report the error to your error\n    // reporting service, for example Sentry\n    console.warn(error);\n  };\n\n  _handleFinishLoading = () => {\n    if (this.state.fontLoaded) {\n      this.setState({ isLoadingComplete: true });\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}