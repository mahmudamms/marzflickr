{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\iym_mobile\\\\SC\\\\iym_mobile\\\\screens\\\\DetailIssue.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport AwesomeAlert from 'react-native-awesome-alerts';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Block, Input, Button, theme, Text, Icon } from \"galio-framework\";\nimport Select2 from \"react-native-select-two\";\nimport { Select, GradientHeader, DetailVisualList, Filter, LoadMore } from \"../components\";\nimport { nowTheme, detail_mrir, config } from \"../constants\";\nimport Autocomplete from \"../components/Autocomplete\";\nimport { Camera } from 'expo-camera';\nimport { clockRunning } from \"react-native-reanimated\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar iconColor = '#6FBE6F';\nvar gradientColor = ['#0BAB64', '#83D475'];\nvar filter = ['badge', 'department', 'project', 'case'];\n\nvar DismissKeyboard = function DismissKeyboard(_ref) {\n  var children = _ref.children;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nvar DetailIssue = function (_React$Component) {\n  _inherits(DetailIssue, _React$Component);\n\n  var _super = _createSuper(DetailIssue);\n\n  function DetailIssue() {\n    var _this2;\n\n    _classCallCheck(this, DetailIssue);\n\n    _this2 = _super.call(this);\n\n    _this2.readData = function () {\n      var url = config.config.url + '/api/iym/detail_issue/' + _this2.state.data_issue;\n      var api = _this2.state.dataLogin.api;\n      fetch(url, {\n        method: 'GET',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          \"Accept\": \"application/json\",\n          'Authorization': api\n        })\n      }).then(function (response) {\n        return response.text();\n      }).then(function (data) {\n        var detail_data = data;\n\n        if (data.slice(-1) != '}') {\n          detail_data = data + '}';\n        }\n\n        detail_data = JSON.parse(detail_data);\n\n        _this2.setState({\n          data_detail: detail_data.results,\n          isLoading: false\n        });\n\n        console.log(_this2.state.data_detail);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    _this2.renderArticles = function () {\n      return React.createElement(Block, {\n        style: {\n          paddingBottom: 20\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 5\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          flex: 1\n        },\n        showsVerticalScrollIndicator: false,\n        keyboardShouldPersistTaps: \"handled\",\n        contentContainerStyle: styles.articles,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        flex: true,\n        style: {\n          borderRadius: 10,\n          backgroundColor: nowTheme.COLORS.WHITE\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, React.createElement(Block, {\n        style: {\n          paddingHorizontal: 20,\n          paddingVertical: 20\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 16\n        }\n      }, \"Badge\"), _this2.state.data_detail.map(function (item, index) {\n        return React.createElement(Block, {\n          row: true,\n          key: index,\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }\n        }, React.createElement(Block, {\n          style: {\n            width: '100%'\n          },\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }\n        }, React.createElement(Input, {\n          color: \"black\",\n          placeholder: \"Badge Employee\",\n          placeholderTextColor: nowTheme.COLORS.PLACEHOLDER,\n          defaultValue: item.badge_no + ' - ' + item.name,\n          editable: false,\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }\n        })));\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, \"Designation\"), _this2.state.data_detail.map(function (item, index) {\n        return React.createElement(Block, {\n          row: true,\n          key: index,\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }\n        }, React.createElement(Block, {\n          style: {\n            width: '100%'\n          },\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }\n        }, React.createElement(Input, {\n          color: \"black\",\n          placeholder: \"Badge Employee\",\n          placeholderTextColor: nowTheme.COLORS.PLACEHOLDER,\n          defaultValue: item.badge_no + ' - ' + item.design_name,\n          editable: false,\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }\n        })));\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      }, \"Department\"), _this2.state.data_detail.map(function (item, index) {\n        return React.createElement(Block, {\n          row: true,\n          key: index,\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }\n        }, React.createElement(Block, {\n          style: {\n            width: '100%'\n          },\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }\n        }, React.createElement(Input, {\n          color: \"black\",\n          placeholder: \"Badge Employee\",\n          placeholderTextColor: nowTheme.COLORS.PLACEHOLDER,\n          defaultValue: item.badge_no + ' - ' + item.department_name,\n          editable: false,\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 33\n          }\n        })));\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }, \"Project\"), _this2.state.data_detail.map(function (item, index) {\n        if (index == 0) {\n          return React.createElement(Block, {\n            row: true,\n            key: index,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }\n          }, React.createElement(Block, {\n            style: {\n              width: '100%'\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }\n          }, React.createElement(Input, {\n            color: \"black\",\n            placeholder: \"Project Name\",\n            placeholderTextColor: nowTheme.COLORS.PLACEHOLDER,\n            defaultValue: item.project_name,\n            editable: false,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }\n          })));\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, \"Detail Of Case\"), _this2.state.data_detail.map(function (item, index) {\n        if (index == 0) {\n          return React.createElement(Block, {\n            row: true,\n            key: index,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }\n          }, React.createElement(Block, {\n            style: {\n              width: '100%'\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 37\n            }\n          }, React.createElement(Input, {\n            color: \"black\",\n            placeholder: \"Case\",\n            placeholderTextColor: nowTheme.COLORS.PLACEHOLDER,\n            defaultValue: item.case,\n            editable: false,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }\n          })));\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }\n      }, \"Reported By\"), _this2.state.data_detail.map(function (item, index) {\n        if (index == 0) {\n          return React.createElement(Block, {\n            row: true,\n            key: index,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }\n          }, React.createElement(Block, {\n            style: {\n              width: '100%'\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }\n          }, React.createElement(Input, {\n            color: \"black\",\n            placeholder: \"Reported By\",\n            placeholderTextColor: nowTheme.COLORS.PLACEHOLDER,\n            defaultValue: item.create_by_full_name,\n            editable: false,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 37\n            }\n          })));\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }\n      }, \"Reported Date\"), _this2.state.data_detail.map(function (item, index) {\n        if (index == 0) {\n          return React.createElement(Block, {\n            row: true,\n            key: index,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }\n          }, React.createElement(Block, {\n            style: {\n              width: '100%'\n            },\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 37\n            }\n          }, React.createElement(Input, {\n            color: \"black\",\n            placeholder: \"Reported By\",\n            placeholderTextColor: nowTheme.COLORS.PLACEHOLDER,\n            defaultValue: item.create_date,\n            editable: false,\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 37\n            }\n          })));\n        }\n      })))));\n    };\n\n    _this2.Loading = function () {\n      return React.createElement(Block, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 5\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: nowTheme.COLORS.PRIMARY,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this2.renderHeader = function () {\n      return React.createElement(GradientHeader, {\n        datauser: _this2.state.data_user,\n        title: 'Detail Of Issue',\n        back: true,\n        gradientColor: gradientColor,\n        borderRadius: 5,\n        profile: false,\n        headerHeight: 8,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 5\n        }\n      });\n    };\n\n    _this2.state = {\n      case: '',\n      listData: [],\n      isLoading: false,\n      isLoadData: false,\n      loadButton: false,\n      dataLogin: [],\n      filter: '',\n      data_issue: [],\n      data_detail: []\n    };\n    return _this2;\n  }\n\n  _createClass(DetailIssue, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data_user, data_login;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('data_user'));\n\n            case 2:\n              data_user = _context.sent;\n              data_user = JSON.parse(data_user);\n              data_login = {\n                project: data_user.project_id,\n                api: data_user.api_key\n              };\n              this.setState({\n                dataLogin: data_login,\n                data_issue: this.props.route.params.data_issue\n              });\n              this.readData();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DismissKeyboard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }\n      }, React.createElement(Block, {\n        flex: true,\n        style: {\n          top: height * 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }\n      }, this.renderHeader(), React.createElement(Block, {\n        flex: true,\n        center: true,\n        style: styles.home,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }\n      }, this.state.isLoading == true ? this.Loading() : this.renderArticles()))));\n    }\n  }]);\n\n  return DetailIssue;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  home: {\n    width: width\n  },\n  articles: {\n    width: width - theme.SIZES.BASE * 2,\n    paddingVertical: theme.SIZES.BASE,\n    fontFamily: 'montserrat-regular'\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});\nexport default DetailIssue;","map":{"version":3,"sources":["C:/xampp/htdocs/iym_mobile/SC/iym_mobile/screens/DetailIssue.js"],"names":["React","AwesomeAlert","AsyncStorage","Block","Input","Button","theme","Text","Icon","Select2","Select","GradientHeader","DetailVisualList","Filter","LoadMore","nowTheme","detail_mrir","config","Autocomplete","Camera","clockRunning","Dimensions","get","height","width","iconColor","gradientColor","filter","DismissKeyboard","children","Keyboard","dismiss","DetailIssue","readData","url","state","data_issue","api","dataLogin","fetch","method","headers","Headers","then","response","text","data","detail_data","slice","JSON","parse","setState","data_detail","results","isLoading","console","log","catch","error","renderArticles","paddingBottom","flex","styles","articles","borderRadius","backgroundColor","COLORS","WHITE","paddingHorizontal","paddingVertical","fontWeight","map","item","index","PLACEHOLDER","badge_no","name","design_name","department_name","project_name","case","create_by_full_name","create_date","Loading","justifyContent","alignItems","PRIMARY","renderHeader","data_user","listData","isLoadData","loadButton","getItem","data_login","project","project_id","api_key","props","route","params","top","home","Component","StyleSheet","create","SIZES","BASE","fontFamily","logo"],"mappings":"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","sourcesContent":["import React from \"react\"; \nimport AwesomeAlert from 'react-native-awesome-alerts'; \nimport {  \n    ActivityIndicator, \n    AsyncStorage, \n    ImageBackground, \n    Image, \n    Dimensions, \n    Keyboard, \n    StyleSheet,  \n    ScrollView, \n    TouchableWithoutFeedback, \n    View, \n    TouchableOpacity, \n} from \"react-native\"; \n \nimport {  \n    Block,  \n    Input,  \n    Button, \n    theme,  \n    Text,  \n    Icon \n} from \"galio-framework\"; \n \nimport Select2 from \"react-native-select-two\" \n \nimport { Select, GradientHeader, DetailVisualList, Filter, LoadMore } from \"../components\"; \nimport { nowTheme, detail_mrir, config } from \"../constants\"; \n \nimport Autocomplete from '../components/Autocomplete'; \nimport {Camera} from 'expo-camera'; \nimport { clockRunning } from \"react-native-reanimated\";\n \nconst { height, width } = Dimensions.get(\"screen\"); \n \nvar iconColor = '#6FBE6F'; \nvar gradientColor = ['#0BAB64', '#83D475']; \n \nvar filter = ['badge', 'department', 'project', 'case']; \n \nconst DismissKeyboard = ({ children }) => ( \n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>{children}</TouchableWithoutFeedback> \n); \n \nclass DetailIssue extends React.Component { \n \n   // _isMounted = false; \n \n    constructor() { \n    super(); \n     \n    this.state = { \n    case    : '', \n    listData: [], \n    isLoading: false, \n    isLoadData: false, \n    loadButton: false, \n    dataLogin: [], \n    filter: '', \n    data_issue: [],\n    data_detail: [],\n \n    }; \n    } \n \n    async componentDidMount() { \n\n        //this._isMounted = true; \n    \n        var data_user = await AsyncStorage.getItem('data_user'); \n        var data_user = JSON.parse(data_user); \n    \n        var data_login = { \n            project: data_user.project_id, \n            api: data_user.api_key, \n        } \n    \n        this.setState({\n            dataLogin: data_login,\n            data_issue: this.props.route.params.data_issue\n        }); \n\n        //console.log(this.state.data_issue);\n    \n         this.readData() \n    \n        //return () => { isMounted = false }; \n\n    } \n \n    componentWillUnmount() { \n    //this._isMounted = false; \n    } \n        \n    readData = () => { \n           \n        var url = config.config.url + '/api/iym/detail_issue/' + this.state.data_issue; \n        var api = this.state.dataLogin.api;\n\n            // console.log(url); \n            // console.log(api); \n        \n            fetch(url, { \n            method: 'GET', \n            headers: new Headers({ \n                'Content-Type': 'application/json', \n                \"Accept\": \"application/json\", \n                'Authorization': api, \n            }), \n            }) \n            .then((response) => response.text()) \n            .then((data) =>{ \n        \n            var detail_data = data; \n\n                        \n            if(data.slice(-1) != '}'){ \n                detail_data = data + '}'; \n            } \n        \n            detail_data = JSON.parse(detail_data); \n        \n            this.setState({ \n                data_detail: detail_data.results,\n                isLoading:false\n            }); \n\n            console.log(this.state.data_detail);\n          \n            }).catch((error) => { \n                console.error(error); \n            }); \n    } \n\n    \n  \n    renderArticles = () => { \n    return ( \n    <Block style={{paddingBottom: 20}}> \n      \n        <ScrollView style={{flex:1}}\n              showsVerticalScrollIndicator={false}\n              keyboardShouldPersistTaps='handled'\n                 contentContainerStyle={styles.articles} \n        > \n        \n          <Block flex style={{borderRadius: 10, backgroundColor: nowTheme.COLORS.WHITE}}> \n            <Block style={{paddingHorizontal: 20, paddingVertical: 20}}>\n               <Text style={{fontWeight: \"bold\"}}>Badge</Text>\n               {\n                    this.state.data_detail.map((item, index) => {\n                        //console.log(item);\n                        return (\n                            <Block row  key={index}>\n                                <Block style={{ width: '100%' }}>\n                                <Input\n                                    color=\"black\"\n                                    placeholder=\"Badge Employee\"\n                                    placeholderTextColor={nowTheme.COLORS.PLACEHOLDER}\n                                    defaultValue={item.badge_no + ' - ' + item.name }\n                                    editable = {false}\n                                    />                      \n                                </Block>                           \n                            </Block>\n                        )\n                    })\n                } \n\n                <Text style={{fontWeight: \"bold\"}}>Designation</Text>\n               {\n                    this.state.data_detail.map((item, index) => {\n                        //console.log(item);\n                        return (\n                            <Block row  key={index}>\n                                <Block style={{ width: '100%' }}>\n                                <Input\n                                    color=\"black\"\n                                    placeholder=\"Badge Employee\"\n                                    placeholderTextColor={nowTheme.COLORS.PLACEHOLDER}\n                                    defaultValue={item.badge_no + ' - ' + item.design_name }\n                                    editable = {false}\n                                    />                      \n                                </Block>                           \n                            </Block>\n                        )\n                    })\n                }  \n                <Text style={{fontWeight: \"bold\"}}>Department</Text>\n               {\n                    this.state.data_detail.map((item, index) => {\n                        //console.log(item);\n                        return (\n                            <Block row  key={index}>\n                                <Block style={{ width: '100%' }}>\n                                <Input\n                                    color=\"black\"\n                                    placeholder=\"Badge Employee\"\n                                    placeholderTextColor={nowTheme.COLORS.PLACEHOLDER}\n                                    defaultValue={item.badge_no + ' - ' + item.department_name }\n                                    editable = {false}\n                                    />                      \n                                </Block>                           \n                            </Block>\n                        )\n                    })\n                }\n                <Text style={{fontWeight: \"bold\"}}>Project</Text>\n                {\n                        this.state.data_detail.map((item, index) => {\n                            //console.log(item);\n                            if(index == 0){\n                            return (\n                                <Block row  key={index}>\n                                    <Block style={{ width: '100%' }}>\n                                    <Input\n                                        color=\"black\"\n                                        placeholder=\"Project Name\"\n                                        placeholderTextColor={nowTheme.COLORS.PLACEHOLDER}\n                                        defaultValue={item.project_name }\n                                        editable = {false}\n                                        />                      \n                                    </Block>                           \n                                </Block>\n                            )\n                            }\n                        })\n                } \n                <Text style={{fontWeight: \"bold\"}}>Detail Of Case</Text>\n                {\n                        this.state.data_detail.map((item, index) => {\n                            //console.log(item);\n                            if(index == 0){\n                            return (\n                                <Block row  key={index}>\n                                    <Block style={{ width: '100%' }}>\n                                    <Input\n                                        color=\"black\"\n                                        placeholder=\"Case\"\n                                        placeholderTextColor={nowTheme.COLORS.PLACEHOLDER}\n                                        defaultValue={item.case }\n                                        editable = {false}\n                                        />                      \n                                    </Block>                           \n                                </Block>\n                            )\n                            }\n                        })\n                } \n                <Text style={{fontWeight: \"bold\"}}>Reported By</Text>\n                {\n                        this.state.data_detail.map((item, index) => {\n                            //console.log(item);\n                            if(index == 0){\n                            return (\n                                <Block row  key={index}>\n                                    <Block style={{ width: '100%' }}>\n                                    <Input\n                                        color=\"black\"\n                                        placeholder=\"Reported By\"\n                                        placeholderTextColor={nowTheme.COLORS.PLACEHOLDER}\n                                        defaultValue={item.create_by_full_name }\n                                        editable = {false}\n                                        />                      \n                                    </Block>                           \n                                </Block>\n                            )\n                            }\n                        })\n                } \n                <Text style={{fontWeight: \"bold\"}}>Reported Date</Text>\n                {\n                        this.state.data_detail.map((item, index) => {\n                            //console.log(item);\n                            if(index == 0){\n                            return (\n                                <Block row  key={index}>\n                                    <Block style={{ width: '100%' }}>\n                                    <Input\n                                        color=\"black\"\n                                        placeholder=\"Reported By\"\n                                        placeholderTextColor={nowTheme.COLORS.PLACEHOLDER}\n                                        defaultValue={item.create_date }\n                                        editable = {false}\n                                        />                      \n                                    </Block>                           \n                                </Block>\n                            )\n                            }\n                        })\n                } \n            </Block> \n            \n          </Block>\n \n        </ScrollView> \n    </Block> \n    ); \n    }; \n \n      \n    \n    Loading = function(){ \n    return( \n    <Block style={{ flex: 1, justifyContent: 'center', alignItems: 'center'  }}> \n        <ActivityIndicator size=\"large\" color={nowTheme.COLORS.PRIMARY} /> \n    </Block> \n    ); \n    } \n \n    renderHeader = () => { \n    return( \n    <GradientHeader  \n        datauser={this.state.data_user} \n        title={'Detail Of Issue'} \n        back={true} \n        gradientColor={gradientColor} \n        borderRadius={5} \n        profile={false} \n        headerHeight={8} \n    /> \n    ) \n    } \n \n    render() { \n     \n        return ( \n          <DismissKeyboard> \n          <View style={{flex: 1}}> \n          <Block flex style={{top: height * 0}}> \n \n              { this.renderHeader() } \n           \n              <Block flex center style={styles.home}> \n              { this.state.isLoading == true ? this.Loading() : this.renderArticles() } \n              </Block> \n                            \n          </Block> \n          </View> \n          </DismissKeyboard> \n      ); \n       \n    }    \n} \n \nconst styles = StyleSheet.create({ \n  home: { \n    width: width \n  }, \n  articles: { \n    width: width - theme.SIZES.BASE * 2, \n    paddingVertical: theme.SIZES.BASE, \n    fontFamily: 'montserrat-regular' \n \n  }, \n  logo: { \n    width: 66, \n    height: 58, \n  }, \n}); \n \nexport default DetailIssue; \n"]},"metadata":{},"sourceType":"module"}